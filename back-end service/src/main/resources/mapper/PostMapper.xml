<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.unimelb.studypartner.mapper.PostMapper">
    <resultMap id="BaseResultMap" type="com.unimelb.studypartner.dao.Post">
        <id column="post_id" jdbcType="INTEGER" property="postId"/>
        <result column="post_name" jdbcType="VARCHAR" property="postName"/>
        <result column="post_description" jdbcType="VARCHAR" property="postDescription"/>
        <result column="post_price" jdbcType="INTEGER" property="postPrice"/>
        <result column="post_datetime" jdbcType="TIMESTAMP" property="postDatetime"/>
        <result column="user_id" jdbcType="INTEGER" property="userId"/>
        <result column="latitude" jdbcType="DECIMAL" property="latitude"/>
        <result column="longitude" jdbcType="DECIMAL" property="longitude"/>
        <result column="tag_id" jdbcType="INTEGER" property="tagId"/>
    </resultMap>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from post
    where post_id = #{postId,jdbcType=INTEGER}
  </delete>
    <insert id="insert" useGeneratedKeys="true" keyProperty="postId" parameterType="com.unimelb.studypartner.dao.Post">
    insert into post (post_id, post_name, post_description, 
      post_price, post_datetime, user_id, 
      latitude, longitude, tag_id
      )
    values (#{postId,jdbcType=INTEGER}, #{postName,jdbcType=VARCHAR}, #{postDescription,jdbcType=VARCHAR}, 
      #{postPrice,jdbcType=INTEGER}, #{postDatetime,jdbcType=TIMESTAMP}, #{userId,jdbcType=INTEGER}, 
      #{latitude,jdbcType=DECIMAL}, #{longitude,jdbcType=DECIMAL}, #{tagId,jdbcType=INTEGER}
      )
  </insert>
    <update id="updateByPrimaryKey" parameterType="com.unimelb.studypartner.dao.Post">
    update post
    set post_name = #{postName,jdbcType=VARCHAR},
      post_description = #{postDescription,jdbcType=VARCHAR},
      post_price = #{postPrice,jdbcType=INTEGER},
      post_datetime = #{postDatetime,jdbcType=TIMESTAMP},
      user_id = #{userId,jdbcType=INTEGER},
      latitude = #{latitude,jdbcType=DECIMAL},
      longitude = #{longitude,jdbcType=DECIMAL},
      tag_id = #{tagId,jdbcType=INTEGER}
    where post_id = #{postId,jdbcType=INTEGER}
  </update>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select post_id, post_name, post_description, post_price, post_datetime, user_id, 
    latitude, longitude, tag_id
    from post
    where post_id = #{postId,jdbcType=INTEGER}
  </select>
    <select id="selectAll" resultMap="BaseResultMap">
    select post_id, post_name, post_description, post_price, post_datetime, user_id, 
    latitude, longitude, tag_id
    from post
  </select>

    <select id="selctByUserId" resultMap="BaseResultMap">
    select post_id, post_name, post_description, post_price, post_datetime, user_id,
    latitude, longitude, tag_id
    from post
    where user_id = #{userId} limit #{offset},#{pageSize}
  </select>

    <select id="searchPost" resultMap="BaseResultMap">
        select post_id, post_name, post_description, post_price, post_datetime, user_id,
        latitude, longitude, tag_id
        from post
        <where>
            <if test="longitudeRight != null">
                and longitude &gt; #{longitudeRight} and longitude &lt; #{longitudeLeft}
                and latitude &lt; #{latitudeUp} and latitude &gt; #{latitudeDown}
            </if>
            <if test="tagId != null">
                and tag_id = #{tagId}
            </if>
            <if test="title != null">
                and (post_name like #{title} or post_description like #{title})
            </if>
        </where>
        limit #{offset},#{pageSize}
    </select>

    <select id="searchByids" resultMap="BaseResultMap">
        select post_id, post_name, post_description, post_price, post_datetime, user_id,
        latitude, longitude, tag_id
        from post
        <where>
            <if test="array.length > 0">
                tag_id IN
                <foreach collection="array" item="id" index="index" open="(" close=")" separator=",">
                    #{id}
                </foreach>
            </if>
        </where>
        limit 0,5
    </select>
</mapper>